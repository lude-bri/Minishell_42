==192195== Memcheck, a memory error detector
==192195== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==192195== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==192195== Command: ./minishell
==192195== Parent PID: 188633
==192195== 
==192195== (action at startup) vgdb me ... 
==192195== 
==192195== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==192195==   /path/to/gdb ./minishell
==192195== and then give GDB the following command
==192195==   target remote | /usr/bin/vgdb --pid=192195
==192195== --pid is optional if only one valgrind process is running
==192195== 
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showi==191319== 
==191319== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==191319==   /path/to/gdb ./minishell
==191319== and then give GDB the following command
==191319==   target remote | /usr/bin/vgdb --pid=191319
==191319== --pid is optional if only one valgrind process is running
==191319== 
==191319== 
==191319== HEAP SUMMARY:
==191319==     in use at exit: 233,496 bytes in 454 blocks
==191319==   total heap usage: 645 allocs, 191 frees, 249,055 bytes allocated
==191319== 
==191319== LEAK SUMMARY:
==191319==    definitely lost: 0 bytes in 0 blocks
==191319==    indirectly lost: 0 bytes in 0 blocks
==191319==      possibly lost: 0 bytes in 0 blocks
==191319==    still reachable: 233,496 bytes in 454 blocks
==191319==         suppressed: 0 bytes in 0 blocks
==191319== Rerun with --leak-check=full to see details of leaked memory
==191319== 
==191319== For lists of detected and suppressed errors, rerun with: -s
==191319== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
cumentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+target remote | vgdb --pid=191319 191579 192195
sending command 191579 192195 to pid 191319
.temp/gdb_commands.txt:1: Error in sourced command file:
Remote communication error.  Target disconnected.: Connection reset by peer.
+q
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
No symbol table is loaded.  Use the "file" command.
Make breakpoint pending on future shared library load? (y or [n]) [answered N; input not from terminal]
+run
.gdbinit:58: Error in sourced command file:
No executable file specified.
Use the "file" or "exec-file" command.
+q
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc948, envp=0x7fffffffc958) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc7a0) at src/100_main.c:33
+n
+n
+n
+n
+ref
+n
+n
+s
to_execute (msh=0x7fffffffc7a0, tokens=0x447e70) at src/400_execute.c:17
+n
+n
+n
+s
exec_one (msh=0x7fffffffc7a0, tokens=0x447e70) at src/420_exec_one.c:53
+n
+p *tokens-type
No symbol "type" in current context.
+p *tokens->type
Attempt to take contents of a non-pointer value.
+p tokens->type
$1 = TKN_IN
+q
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, 
   maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+start
Program not restarted.
+n
+s
init_msh (msh=0x7fffffffc790, envp=0x7fffffffc948) at src/110_init.c:19
+n
+n
+n
+n
+n
+n
+n
main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:25
+n
[Attaching after Thread 0x7ffff7cf3740 (LWP 183118) fork to child process 183146]
[New inferior 2 (process 183146)]
[Detaching after fork from parent process 183118]
[Inferior 1 (process 183118) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[Inferior 2 (process 183146) exited with code 0177]
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc790) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc790) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+ref
+ref
+n
+n
+s
tokenizer (msh=0x7fffffffc790, av=0x42ef30) at src/210_tkns_type.c:41
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+s
assign_tkn (token=0x447f20, av=0x42ef38) at src/210_tkns_type.c:82
+disp token->name[0]
1: token->name[0] = 62 '>'
+n
1: token->name[0] = 62 '>'
+n
1: token->name[0] = 62 '>'
+n
1: token->name[0] = 62 '>'
+n
1: token->name[0] = 62 '>'
+n
1: token->name[0] = 62 '>'
+n
1: token->name[0] = 62 '>'
+n
1: token->name[0] = 62 '>'
+n

Program received signal SIGSEGV, Segmentation fault.
0x0000000000402dc9 in assign_tkn (token=0x447f20, av=0x42ef38) at src/210_tkns_type.c:91
1: token->name[0] = 62 '>'
+p *av[0]
$1 = 62 '>'
+p *av[1]
Cannot access memory at address 0x0
+p token->len
$2 = 0
+p *av
$3 = 0x447e90 ">"
+p av[0]
$4 = 0x447e90 ">"
+p av[1]
$5 = 0x0
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+start
Program not restarted.
+n
+n
+s
msh_loop (msh=0x7fffffffc790) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc790) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+n
+ref
+n
+n
+s
syntax_check (msh=0x7fffffffc790, tokens=0x447e70) at src/320_syntax.c:40
+n
+n
+n
+n
+p tokens->type
$1 = TKN_CMD
+p *tokens
$2 = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x447ec0 "ls",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ee0
}
+exit
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc790) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc790) at src/300_parser.c:36
+n
+start
Temporary breakpoint 2 at 0x40130d: file src/100_main.c, line 23.
Starting program: /home/lude-bri/CC/Rank3/msh_v4/minishell 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+ref
+n
+n
+s
msh_loop (msh=0x7fffffffc790) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc790) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+n
+ref
+n
+n
+s
syntax_check (msh=0x7fffffffc790, tokens=0x447e70) at src/320_syntax.c:62
+n
+n
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc790) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc790) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+ref
+n
+n
+s
tokenizer (msh=0x7fffffffc790, av=0x4139c0) at src/210_tkns_type.c:41
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+s
assign_tkn (token=0x447ee0, av=0x4139c8) at src/210_tkns_type.c:82
+disp token->name[0]
1: token->name[0] = 62 '>'
+n
1: token->name[0] = 62 '>'
+n
1: token->name[0] = 62 '>'
+n
1: token->name[0] = 62 '>'
+n
1: token->name[0] = 62 '>'
+n
1: token->name[0] = 62 '>'
+n
1: token->name[0] = 62 '>'
+n
1: token->name[0] = 62 '>'
+n
1: token->name[0] = 62 '>'
+p *av[0]
$1 = 62 '>'
+p *av[0]
$2 = 62 '>'
+p *av[1]
$3 = 111 'o'
+n
1: token->name[0] = 62 '>'
+n
1: token->name[0] = 62 '>'
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc790) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc790) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+ref
+n
+n
+n
+n
+ref
+p msh->exit_status
$1 = 2
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc790) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc790) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+n
+ref
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
msh_loop (msh=0x7fffffffc790) at src/100_main.c:39
+n
+n
+s
to_execute (msh=0x7fffffffc790, tokens=0x447f10) at src/400_execute.c:17
+n
+n
+n
+s
exec_one (msh=0x7fffffffc790, tokens=0x447f10) at src/420_exec_one.c:53
+n
+n
+s
exec_bi (tokens=0x447f10, msh=0x7fffffffc790) at src/400_execute.c:37
+n
+n
+s
exec_redirs (tokens=0x447f10, msh=0x7fffffffc790) at src/700_redirs.c:151
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+s
redirs_2 (tokens=0x447f10, msh=0x7fffffffc790) at src/700_redirs.c:51
+n
+n
+n
+n
+n
+n
+n
+n
+msh->arg[i]
Undefined command: "msh->arg".  Try "help".
+disp msh->arg[i]
1: msh->arg[i] = 0x42eafe ""
+n
1: msh->arg[i] = 0x42ef60 "echo"
+n
1: msh->arg[i] = 0x0
+n
1: msh->arg[i] = 0x0
+disp *tokens
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x447fd0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ff0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x447fd0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ff0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x447fd0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ff0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x447fd0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ff0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x447fd0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ff0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x447fd0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ff0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x447fd0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ff0
}
+s
redir_out (tokens=0x447f80, msh=0x7fffffffc790) at src/720_redir_out.c:19
+n
+p *token
$1 = {int (void)} 0x7ffff7e655e0 <token>
+p *tokens
$2 = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448040 "out",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
+n
+n
+n
+n
redirs_2 (tokens=0x447f80, msh=0x7fffffffc790) at src/700_redirs.c:69
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x447fd0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ff0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x447fd0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ff0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x447fd0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ff0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x447fd0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ff0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x447fd0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ff0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x447fd0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ff0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x447fd0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ff0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_REDIR_ARG,
  cmd_type = CMD_EXEC,
  name = 0x448040 "out",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_REDIR_ARG,
  cmd_type = CMD_EXEC,
  name = 0x448040 "out",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_REDIR_ARG,
  cmd_type = CMD_EXEC,
  name = 0x448040 "out",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_REDIR_ARG,
  cmd_type = CMD_EXEC,
  name = 0x448040 "out",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_REDIR_ARG,
  cmd_type = CMD_EXEC,
  name = 0x448040 "out",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_REDIR_ARG,
  cmd_type = CMD_EXEC,
  name = 0x448040 "out",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = {
  type = TKN_REDIR_ARG,
  cmd_type = CMD_EXEC,
  name = 0x448040 "out",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: msh->arg[i] = 0x0
2: *tokens = <error: Cannot access memory at address 0x0>
+n
1: msh->arg[i] = 0x0
2: *tokens = <error: Cannot access memory at address 0x0>
+n
1: msh->arg[i] = 0x0
2: *tokens = <error: Cannot access memory at address 0x0>
+n
1: msh->arg[i] = 0x0
2: *tokens = <error: Cannot access memory at address 0x0>
+n
1: msh->arg[i] = 0x0
2: *tokens = <error: Cannot access memory at address 0x0>
+n
exec_redirs (tokens=0x447f10, msh=0x7fffffffc790) at src/700_redirs.c:164
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
exec_bi (tokens=0x447f10, msh=0x7fffffffc790) at src/400_execute.c:40
+n
+n
+n
+n
+s
msh_echo (argv=0x4139c0, msh=0x7fffffffc790) at src/500_echo.c:101
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
exec_bi (tokens=0x447f10, msh=0x7fffffffc790) at src/400_execute.c:65
+n
+n
+n
+n
+s
exec_one (msh=0x7fffffffc790, tokens=0x447f10) at src/420_exec_one.c:59
+n
+n
+n
to_execute (msh=0x7fffffffc790, tokens=0x447f10) at src/400_execute.c:23
+n
+n
+n
msh_loop (msh=0x7fffffffc790) at src/100_main.c:44
+s
free_msh (command=0x447e90, msh=0x7fffffffc790, token=0x447f10) at src/900_free.c:71
+p *msh->cmds->av
$3 = 0x42ef60 "echo"
+p msh->cmds->av[0]
$4 = 0x42ef60 "echo"
+p msh->cmds->av[1]
$5 = 0x0
+p msh->cmds->av[2]
$6 = 0x42ef60 "echo"
+p msh->cmds->av[2]
$7 = 0x42ef60 "echo"
+p msh->cmds->av[2]
$8 = 0x42ef60 "echo"
+p msh->cmds->av[2]
$9 = 0x42ef60 "echo"
+p msh->cmds->av[3]
$10 = 0x6e6f6e2000000000 <error: Cannot access memory at address 0x6e6f6e2000000000>
+p msh->cmds->av[1]
$11 = 0x0
+p msh->cmds->av[0]
$12 = 0x42ef60 "echo"
+p msh->cmds->av[1]
$13 = 0x0
+p msh->cmds->av[2]
$14 = 0x42ef60 "echo"
+start
Temporary breakpoint 2 at 0x40130d: file src/100_main.c, line 23.
Starting program: /home/lude-bri/CC/Rank3/msh_v4/minishell 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+n
+n
+s
msh_loop (msh=0x7fffffffc790) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc790) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+ref
+p *msh->cmds->av
$15 = 0x42ef00 "echo"
+p msh->cmds->av[0]
$16 = 0x42ef00 "echo"
+p msh->cmds->av[1]
$17 = 0x42ef20 "hi"
+p msh->cmds->av[2]
$18 = 0x42ef40 ">"
+p msh->cmds->av[]
A syntax error in expression, near `]'.
+p msh->cmds->av[2]
$19 = 0x42ef40 ">"
+p msh->cmds->av[3]
$20 = 0x447e70 "out"
+p msh->cmds->av[4]
$21 = 0x0
+n
+n
+n
+p msh->cmds->av[-]
A syntax error in expression, near `]'.
+p msh->cmds->av[0]
$22 = 0x42ef00 "echo"
+p msh->cmds->av[1]
$23 = 0x42ef20 "hi"
+p msh->cmds->av[2]
$24 = 0x42ef40 ">"
+p msh->cmds->av[3]
$25 = 0x447e70 "out"
+n
+n
+n
+n
+n
+n
+n
+n
msh_loop (msh=0x7fffffffc790) at src/100_main.c:39
+n
+n
+s
to_execute (msh=0x7fffffffc790, tokens=0x447e90) at src/400_execute.c:17
+n
+n
+n
+s
exec_one (msh=0x7fffffffc790, tokens=0x447e90) at src/420_exec_one.c:53
+n
+n
+s
exec_bi (tokens=0x447e90, msh=0x7fffffffc790) at src/400_execute.c:37
+n
+n
+n
+p msh->cmds->av[0]
$26 = 0x42ef60 "echo"
+p msh->cmds->av[1]
$27 = 0x4480a0 "hi"
+p msh->cmds->av[2]
$28 = 0x0
+p msh->cmds->av[3]
$29 = 0x0
+p msh->cmds->av[4]
$30 = 0x0
+p msh->cmds->av[5]
$31 = 0x21 <error: Cannot access memory at address 0x21>
+p msh->cmds->av[6]
$32 = 0x6968 <error: Cannot access memory at address 0x6968>
+p msh->cmds->av[1]
$33 = 0x4480a0 "hi"
+p msh->cmds->av[0]
$34 = 0x42ef60 "echo"
+p msh->cmds->av[1]
$35 = 0x4480a0 "hi"
+p msh->cmds->av[2]
$36 = 0x0
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
exec_one (msh=0x7fffffffc790, tokens=0x447e90) at src/420_exec_one.c:59
+n
+n
+n
to_execute (msh=0x7fffffffc790, tokens=0x447e90) at src/400_execute.c:23
+n
+n
+n
msh_loop (msh=0x7fffffffc790) at src/100_main.c:44
+s
free_msh (command=0x42eee0, msh=0x7fffffffc790, token=0x447e90) at src/900_free.c:71
+p *msh->cmds->av
$37 = 0x42ef60 "echo"
+p msh->cmds->av[0]
$38 = 0x42ef60 "echo"
+p msh->cmds->av[1]
$39 = 0x4480a0 "hi"
+p msh->cmds->av[2]
$40 = 0x0
+p msh->line
$41 = 0x448050 "echo hi > out"
+p *tokens
No symbol "tokens" in current context.
+p *token
$42 = {
  type = TKN_CMD,
  cmd_type = CMD_ECHO,
  name = 0x447ee0 "echo",
  cmdargs = 0x4139c0,
  len = 4,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447f00
}
+p *token->next
$43 = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x447f50 "hi",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447f70
}
+p *token->next->next
$44 = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x447fc0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fe0
}
+p *token->next->next->next
$45 = {
  type = TKN_REDIR_ARG,
  cmd_type = CMD_EXEC,
  name = 0x448030 "out",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+p *token->next->next->next->next
Cannot access memory at address 0x0
+n
+n
+n
+n
+n
+n
+n
+n
+n
msh_loop (msh=0x7fffffffc790) at src/100_main.c:34
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+exit
Please answer y or n.
Not confirmed.
+n
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc790) at src/100_main.c:33
+n
+n
+n
+n
+ref
+n
+n
+n
+s
free_msh (command=0x447eb0, msh=0x7fffffffc790, token=0x447f50) at src/900_free.c:71
+p msh->cmds->av
$1 = (char **) 0x42ee80
+p msh->cmds->av[0]
$2 = 0x42ef60 "echo"
+p msh->cmds->av[1]
$3 = 0x448130 "hi"
+p msh->cmds->av[2]
$4 = 0x0
+p msh->cmds->av[3]
$5 = 0x6e6f6e2000000000 <error: Cannot access memory at address 0x6e6f6e2000000000>
+p msh->cmds->av[4]
$6 = 0x696265442f485220 <error: Cannot access memory at address 0x696265442f485220>
+p msh->cmds->av[5]
$7 = 0x31 <error: Cannot access memory at address 0x31>
+p msh->line
$8 = 0x448110 "echo hi > out"
+p *token
$9 = {
  type = TKN_CMD,
  cmd_type = CMD_ECHO,
  name = 0x447fa0 "echo",
  cmdargs = 0x4139c0,
  len = 4,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fc0
}
+p *token->next
$10 = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448010 "hi",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448030
}
+p *token->next->next
$11 = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x448080 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x4480a0
}
+p *token->next->next->next
$12 = {
  type = TKN_REDIR_ARG,
  cmd_type = CMD_EXEC,
  name = 0x4480f0 "out",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
+s
free_arg (argv=0x42ee80) at src/900_free.c:56
+n
+n
+disp argv[i]
1: argv[i] = 0x42ef60 "echo"
+n
1: argv[i] = 0x42ef60 "echo"
+n
1: argv[i] = 0x42ef60 ".\004"
+n
1: argv[i] = 0x0
+n
1: argv[i] = 0x448130 "hi"
+n
1: argv[i] = 0x448130 "hi"
+n
1: argv[i] = 0x448130 "(\353B"
+n
1: argv[i] = 0x0
+n
1: argv[i] = 0x0
+n
1: argv[i] = 0x0
+n
1: argv[i] = 0x0
+n
1: argv[i] = <error: Cannot access memory at address 0x10>
+n
free_msh (command=0x447eb0, msh=0x7fffffffc790, token=0x447f50) at src/900_free.c:73
+n
+n
+n
+s
free_vector (vector=0x7fffffffc7f8) at src/900_free.c:20
+m
Ambiguous command "m": macro, maintenance, make, mchk, mem, memory-tag, monitor, mt.
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+ref
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
free_msh (command=0x447eb0, msh=0x7fffffffc790, token=0x447f50) at src/900_free.c:77
+n
+n
+n
msh_loop (msh=0x7fffffffc790) at src/100_main.c:34
+p *msh
$13 = {
  cmds = 0x447eb0,
  tree_head = 0x447f50,
  envp = 0x40d2a0,
  path = 0x0,
  arg = 0x42ee80,
  user = 0x0,
  home = 0x0,
  hostname = 0x0,
  pwd = 0x0,
  prompt = 0x0,
  line = 0x448110 "x\205D",
  cmd_count = 4,
  pipe_count = 1,
  exit_status = 0,
  flag_redir = true,
  tokens = {
    count = 0,
    size = 0,
    buffer = 0x0
  }
}
+p *msh->envp
$14 = 0x40d890 "COLORTERM=truecolor"
+n
+n
+n
+n
+ref
+n
+n
+s
to_execute (msh=0x7fffffffc790, tokens=0x4480a0) at src/400_execute.c:17
+n
+n
+n
+s
exec_one (msh=0x7fffffffc790, tokens=0x4480a0) at src/420_exec_one.c:53
+n
+n
+s
exec_bi (tokens=0x4480a0, msh=0x7fffffffc790) at src/400_execute.c:37
+n
+n
+n
+n
+n
+n
+n
+n
+s
msh_exit (argv=0x42ef60, msh=0x7fffffffc790, tokens=0x4480a0) at src/560_exit.c:51
+n
+s
exit_msh (argv=0x42ef60, msh=0x7fffffffc790, tokens=0x4480a0) at src/560_exit.c:59
+s
__printf (format=0x409038 "exit\n") at ./stdio-common/printf.c:28
+m
Ambiguous command "m": macro, maintenance, make, mchk, mem, memory-tag, monitor, mt.
+m
Ambiguous command "m": macro, maintenance, make, mchk, mem, memory-tag, monitor, mt.
+n
+n
+n
+n
exit_msh (argv=0x42ef60, msh=0x7fffffffc790, tokens=0x4480a0) at src/560_exit.c:72
+ref
+p *msh->encp
There is no member named encp.
+p *msh->envp
$15 = 0x40d890 "COLORTERM=truecolor"
+n
+p *msh->envp
$16 = 0x7ffff7f42ce0 <main_arena+96> "`\201D"
+s
free_msh (command=0x448130, msh=0x7fffffffc790, token=0x4480a0) at src/900_free.c:71
+p *msh->cmds->av
$17 = 0x410580 "exit"
+p msh->cmds->av[0]
$18 = 0x410580 "exit"
+p msh->cmds->av[1]
$19 = 0x0
+p msh->cmds->av[2]
$20 = 0x0
+p msh->cmds->av[3]
$21 = 0x1021 <error: Cannot access memory at address 0x1021>
+n
+s
free_arg (argv=0x42ef60) at src/900_free.c:56
1: argv[i] = 0x0
+n
1: argv[i] = 0x410580 "exit"
+n
1: argv[i] = 0x410580 "exit"
+n
1: argv[i] = 0x410580 "exit"
+n
1: argv[i] = 0x410580 "0\006A"
+n
1: argv[i] = 0x0
+n
1: argv[i] = 0x0
+n
1: argv[i] = 0x0
+n
1: argv[i] = 0x0
+n
1: argv[i] = <error: Cannot access memory at address 0x8>
+n
free_msh (command=0x448130, msh=0x7fffffffc790, token=0x4480a0) at src/900_free.c:73
+p *msh->line
$22 = 101 'e'
+p msh->line
$23 = 0x448150 "exit"
+m
Ambiguous command "m": macro, maintenance, make, mchk, mem, memory-tag, monitor, mt.
+m
Ambiguous command "m": macro, maintenance, make, mchk, mem, memory-tag, monitor, mt.
+n
+n
+n
+n
+n
+n
+n
exit_msh (argv=0x42ef60, msh=0x7fffffffc790, tokens=0x4480a0) at src/560_exit.c:75
+n
[Inferior 1 (process 198727) exited normally]
+n
The program is not being run.
+n
The program is not being run.
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+n
[Attaching after Thread 0x7ffff7cf3740 (LWP 202032) fork to child process 202044]
[New inferior 2 (process 202044)]
[Detaching after fork from parent process 202032]
[Inferior 1 (process 202032) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[Inferior 2 (process 202044) exited with code 0177]
+start
Temporary breakpoint 2 at 0x4012f0: -qualified main. (2 locations)
Starting program: /home/lude-bri/CC/Rank3/msh_v4/minishell 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+ref
+n
+n
+s
msh_loop (msh=0x7fffffffc790) at src/100_main.c:33
+n
+n
+n
+n
+ref
+n
+n
+c
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x0000000000407320 in ft_strncmp (s1=0x20f327aa0fa09b3 <error: Cannot access memory at address 0x20f327aa0fa09b3>, s2=0x40919b "-n", n=2) at libft_42/ft_strncmp.c:41
+p str1[i]
Cannot access memory at address 0x20f327aa0fa09b3
+p str1
$1 = (unsigned char *) 0x20f327aa0fa09b3 <error: Cannot access memory at address 0x20f327aa0fa09b3>
+p str2
$2 = (unsigned char *) 0x40919b "-n"
+bt
#0  0x0000000000407320 in ft_strncmp (
    s1=0x20f327aa0fa09b3 <error: Cannot access memory at address 0x20f327aa0fa09b3>, 
    s2=0x40919b "-n", n=2) at libft_42/ft_strncmp.c:41
#1  0x0000000000404545 in msh_echo (argv=0x4139c0, msh=0x7fffffffc790) at src/500_echo.c:108
#2  0x00000000004038fc in exec_bi (tokens=0x447e90, msh=0x7fffffffc790) at src/400_execute.c:47
#3  0x000000000040426c in exec_one (msh=0x7fffffffc790, tokens=0x447e90) at src/420_exec_one.c:56
#4  0x00000000004037e5 in to_execute (msh=0x7fffffffc790, tokens=0x447e90) at src/400_execute.c:21
#5  0x00000000004013aa in msh_loop (msh=0x7fffffffc790) at src/100_main.c:42
#6  0x000000000040133c in main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:25
+f 1
#1  0x0000000000404545 in msh_echo (argv=0x4139c0, msh=0x7fffffffc790) at src/500_echo.c:108
+p newline
$3 = 1
+f 2
#2  0x00000000004038fc in exec_bi (tokens=0x447e90, msh=0x7fffffffc790) at src/400_execute.c:47
+f 1
#1  0x0000000000404545 in msh_echo (argv=0x4139c0, msh=0x7fffffffc790) at src/500_echo.c:108
+p *argv[1]
Cannot access memory at address 0x20f327aa0fa09b3
+f 2
#2  0x00000000004038fc in exec_bi (tokens=0x447e90, msh=0x7fffffffc790) at src/400_execute.c:47
+p *tokens->cmdargs
$4 = 0x413 <error: Cannot access memory at address 0x413>
+f 3
#3  0x000000000040426c in exec_one (msh=0x7fffffffc790, tokens=0x447e90) at src/420_exec_one.c:56
+p tokens
$5 = (t_tkn *) 0x447e90
+p *tokens
$6 = {
  type = TKN_CMD,
  cmd_type = CMD_ECHO,
  name = 0x447ee0 "echo",
  cmdargs = 0x4139c0,
  len = 4,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447f00
}
+bt
#0  0x0000000000407320 in ft_strncmp (
    s1=0x20f327aa0fa09b3 <error: Cannot access memory at address 0x20f327aa0fa09b3>, 
    s2=0x40919b "-n", n=2) at libft_42/ft_strncmp.c:41
#1  0x0000000000404545 in msh_echo (argv=0x4139c0, msh=0x7fffffffc790) at src/500_echo.c:108
#2  0x00000000004038fc in exec_bi (tokens=0x447e90, msh=0x7fffffffc790) at src/400_execute.c:47
#3  0x000000000040426c in exec_one (msh=0x7fffffffc790, tokens=0x447e90) at src/420_exec_one.c:56
#4  0x00000000004037e5 in to_execute (msh=0x7fffffffc790, tokens=0x447e90) at src/400_execute.c:21
#5  0x00000000004013aa in msh_loop (msh=0x7fffffffc790) at src/100_main.c:42
#6  0x000000000040133c in main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:25
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc790) at src/100_main.c:33
+n
+n
+n
+n
+ref
+n
+n
+s
to_execute (msh=0x7fffffffc790, tokens=0x447ef0) at src/400_execute.c:17
+n
+n
+n
+s
exec_one (msh=0x7fffffffc790, tokens=0x447ef0) at src/420_exec_one.c:53
+n
+n
+s
exec_bi (tokens=0x447ef0, msh=0x7fffffffc790) at src/400_execute.c:37
+n
+n
+s
exec_redirs (tokens=0x447ef0, msh=0x7fffffffc790) at src/700_redirs.c:153
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+s
redirs_2 (tokens=0x447ef0, msh=0x7fffffffc790) at src/700_redirs.c:51
+n
+n
+u
+u
+u
+u
+u
+u
+u
+u
+u
+u
+p *msh->arg
$1 = 0x42ef60 "echo"
+p *msh->cmds->av
$2 = 0x447e70 "echo"
+disp *msh->arg
1: *msh->arg = 0x42ef60 "echo"
+disp *msh->cmds->av
2: *msh->cmds->av = 0x447e70 "echo"
+n
1: *msh->arg = 0x42ef60 "echo"
2: *msh->cmds->av = 0x447e70 "echo"
+n
1: *msh->arg = 0x42ef60 "echo"
2: *msh->cmds->av = 0x42eaa3 ""
+n
1: *msh->arg = 0x42ef60 "echo"
2: *msh->cmds->av = 0x42ef60 "echo"
+p *tokens->cmdargs
Cannot access memory at address 0x10
+n

Program received signal SIGSEGV, Segmentation fault.
0x00000000004066d4 in redirs_2 (tokens=0x0, msh=0x7fffffffc790) at src/700_redirs.c:87
1: *msh->arg = 0x42ef60 "echo"
2: *msh->cmds->av = 0x42ef60 "echo"
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc790) at src/100_main.c:33
+n
+n
+n
+n
+ref
+c
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x00000000004066cc in redirs_2 (tokens=0x0, msh=0x7fffffffc790) at src/700_redirs.c:87
+q
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc790) at src/100_main.c:33
+n
+n
+n
+n
+ref
+c
Continuing.

Program received signal SIGSEGV, Segmentation fault.
0x00000000004066cc in redirs_2 (tokens=0x0, msh=0x7fffffffc790) at src/700_redirs.c:88
+p *tokens->cmdargs
Cannot access memory at address 0x10
+p tokens->cmdargs
Cannot access memory at address 0x10
+p tokens->cmdargs[0]
Cannot access memory at address 0x10
+p tokens->cmdargs[1]
Cannot access memory at address 0x10
+p tokens->cmdargs[2]
Cannot access memory at address 0x10
+p *msh->cmds->Av
There is no member named Av.
+p *msh->cmds->av
$1 = 0x42ef60 "echo"
+bt
#0  0x00000000004066cc in redirs_2 (tokens=0x0, msh=0x7fffffffc790)
    at src/700_redirs.c:88
#1  0x000000000040679d in exec_redirs (tokens=0x447e70, msh=0x7fffffffc790)
    at src/700_redirs.c:166
#2  0x0000000000403874 in exec_bi (tokens=0x447e70, msh=0x7fffffffc790)
    at src/400_execute.c:39
#3  0x000000000040426c in exec_one (msh=0x7fffffffc790, tokens=0x447e70)
    at src/420_exec_one.c:56
#4  0x00000000004037e5 in to_execute (msh=0x7fffffffc790, tokens=0x447e70)
    at src/400_execute.c:21
#5  0x00000000004013aa in msh_loop (msh=0x7fffffffc790) at src/100_main.c:42
#6  0x000000000040133c in main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948)
    at src/100_main.c:25
+f 1
#1  0x000000000040679d in exec_redirs (tokens=0x447e70, msh=0x7fffffffc790)
    at src/700_redirs.c:166
+p tokens
$2 = (t_tkn *) 0x447e70
+p *tokens
$3 = {
  type = TKN_CMD,
  cmd_type = CMD_ECHO,
  name = 0x447ec0 "echo",
  cmdargs = 0x4139c0,
  len = 3,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ee0
}
+q
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc790) at src/100_main.c:33
+n
+n
+n
+n
+ref
+n
+n
+n
[Attaching after Thread 0x7ffff7cf3740 (LWP 236875) fork to child process 236885]
[New inferior 2 (process 236885)]
[Detaching after fork from parent process 236875]
[Inferior 1 (process 236875) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Thread 2.1 "minishell" received signal SIGSEGV, Segmentation fault.
[Switching to Thread 0x7ffff7cf3740 (LWP 236885)]
0x0000000000403da4 in find_path (cmd=0x0, envp=0x40d2a0) at src/400_execute.c:167
+exit
Not confirmed.
+y
Undefined command: "y".  Try "help".
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc790) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc790) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+n
+n
+n
+s
syntax_check (msh=0x7fffffffc790, tokens=0x447e70) at src/320_syntax.c:63
+sn
Undefined command: "sn".  Try "help".
+sn
Undefined command: "sn".  Try "help".
+n
+n
+s
syntax_check_redirs (msh=0x7fffffffc790, tokens=0x447e70) at src/320_syntax.c:32
+n
+n
+n
+n
+p *tokens
$1 = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x447ec0 ">",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ee0
}
+p *tokens->next
$2 = {
  type = TKN_IN,
  cmd_type = CMD_EXEC,
  name = 0x447f30 "<",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc790) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc790) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+s
split_input (input=0x42ef60 "\"<\"", msh=0x7fffffffc790) at src/200_tokenization.c:208
+n
+p split.number_words
$1 = 1
+n
+n
+n
+n
+n
+n
+p input[i]
$2 = 34 '"'
+p input[0]
$3 = 34 '"'
+p input[1]
$4 = 60 '<'
+p input[2]
$5 = 34 '"'
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc788) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc788) at src/300_parser.c:36
warning: Source file is more recent than executable.
+n
+ref
+n
+n
+n
+n
+s
split_input (input=0x42ef60 ">\"", msh=0x7fffffffc788) at src/200_tokenization.c:220
+nn
Undefined command: "nn".  Try "help".
+n
+p split.numer_words
There is no member named numer_words.
+p split.number_words
$1 = 1
+n
+n
+n
+n
+n
+n
+p msh->len
$2 = 2
+n
+ref
+n
+disp input[i]
1: input[i] = 62 '>'
+n
1: input[i] = 62 '>'
+n
1: input[i] = 62 '>'
+n
1: input[i] = 62 '>'
+n
1: input[i] = 62 '>'
+n
1: input[i] = 62 '>'
+n
1: input[i] = 62 '>'
+n
1: input[i] = 62 '>'
+n
1: input[i] = 62 '>'
+start
Temporary breakpoint 2 at 0x40130d: file src/100_main.c, line 23.
Starting program: /home/lude-bri/CC/Rank3/msh_v4/minishell 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+c
Continuing.
[Attaching after Thread 0x7ffff7cf3740 (LWP 306224) fork to child process 306226]
[New inferior 2 (process 306226)]
[Detaching after fork from parent process 306224]
[Inferior 1 (process 306224) detached]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
[Inferior 2 (process 306226) exited with code 0177]
+q
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc788) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc788) at src/300_parser.c:36
warning: Source file is more recent than executable.
+n
+ref
+n
+n
+n
+n
+s
split_input (input=0x42ef60 "<\"", msh=0x7fffffffc788) at src/200_tokenization.c:220
+n
+n
+n
+n
+n
+n
+n
+n
+n
+ref
+disp input[i]
1: input[i] = 60 '<'
+n
1: input[i] = 60 '<'
+n
1: input[i] = 60 '<'
+n
1: input[i] = 60 '<'
+n
1: input[i] = 60 '<'
+n
1: input[i] = 60 '<'
+n
1: input[i] = 60 '<'
+n
1: input[i] = 60 '<'
+n
1: input[i] = 60 '<'
+n
1: input[i] = 60 '<'
+n
1: input[i] = 60 '<'
+p i
$1 = 0
+n
1: input[i] = 60 '<'
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc788) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc788) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+n
+n
+s
tokenizer (msh=0x7fffffffc788, av=0x446f00) at src/210_tkns_type.c:41
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+start
Temporary breakpoint 2 at 0x40130d: file src/100_main.c, line 23.
Starting program: /home/lude-bri/CC/Rank3/msh_v4/minishell 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+n
+n
+s
msh_loop (msh=0x7fffffffc788) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc788) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+n
+n
+s
tokenizer (msh=0x7fffffffc788, av=0x4139c0) at src/210_tkns_type.c:41
+n
+n
+n
+n
+n
+n
+s
assign_tkn (token=0x447e70, av=0x4139c0) at src/210_tkns_type.c:82
+p token->name[0]
$1 = 60 '<'
+p token->name[1]
$2 = 0 '\000'
+p token->name[2]
$3 = 0 '\000'
+p *av
$4 = 0x42ef00 "<"
+p av[0]
$5 = 0x42ef00 "<"
+p av[1]
$6 = 0x42ef20 "example"
+p av[2]
$7 = 0x42ef40 "wc"
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc788) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc788) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+s
split_input (input=0x42ef60 "wc <\"", msh=0x7fffffffc788) at src/200_tokenization.c:220
+n
+p split.number_words
$1 = 2
+n
+n
+n
+n
+n
+n
+p msh->len
$2 = 5
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+p split.argv[0]
$3 = 0x447e90 "wc"
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+p split.argv[1]
$4 = 0x447eb0 "<"
+p j
$5 = 2
+n
+n
+disp input[i]
1: input[i] = 34 '"'
+n
1: input[i] = 34 '"'
+n
1: input[i] = 34 '"'
+n
1: input[i] = 34 '"'
+n
1: input[i] = 0 '\000'
+n
1: input[i] = 0 '\000'
+n
1: input[i] = 0 '\000'
+n
1: input[i] = 0 '\000'
+n
1: input[i] = 0 '\000'
+s
handle_double_quotes (input=0x42ef60 "wc <\"", i=0x7fffffffc6f4, msh=0x7fffffffc788) at src/200_tokenization.c:155
+n
+n
+n
+n
+p input[*i]
$6 = 0 '\000'
+n
+n
split_input (input=0x42ef60 "wc <\"", msh=0x7fffffffc788) at src/200_tokenization.c:244
1: input[i] = 0 '\000'
+n
1: input[i] = 0 '\000'
+n
1: input[i] = 0 '\000'
+n
1: input[i] = 0 '\000'
+p split.argv[0]
$7 = 0x447e90 "wc"
+p split.argv[1]
$8 = 0x447eb0 "<"
+p split.argv[2]
$9 = 0x447ed0 ""
+p j
$10 = 3
+p split.argv[3]
$11 = 0x21 <error: Cannot access memory at address 0x21>
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc788) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc788) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+n
+n
+n
+p *tokens
$1 = {
  type = TKN_IN,
  cmd_type = CMD_EXEC,
  name = 0x42ef40 "<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ec0
}
+p *tokens->next
$2 = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x447f10 "wc",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+s
syntax_check (msh=0x7fffffffc788, tokens=0x447e70) at src/320_syntax.c:79
+n
+n
+s
syntax_check_redirs (msh=0x7fffffffc788, tokens=0x447e70) at src/320_syntax.c:35
+n
+n
+n
+p *tokens->next
$3 = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x447f10 "wc",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
+n
+n
+p token
$4 = {int (void)} 0x7ffff7e655e0 <token>
+p *token
$5 = {int (void)} 0x7ffff7e655e0 <token>
+p *tokens
$6 = {
  type = TKN_IN,
  cmd_type = CMD_EXEC,
  name = 0x42ef40 "<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ec0
}
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc788) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc788) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+n
+n
+n
+s
syntax_check (msh=0x7fffffffc788, tokens=0x447e70) at src/320_syntax.c:79
warning: Source file is more recent than executable.
+n
+n
+s
syntax_check_redirs (msh=0x7fffffffc788, tokens=0x447e70) at src/320_syntax.c:35
+disp *tokens
1: *tokens = {
  type = TKN_IN,
  cmd_type = CMD_EXEC,
  name = 0x42ef40 "<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ec0
}
+n
1: *tokens = {
  type = TKN_IN,
  cmd_type = CMD_EXEC,
  name = 0x42ef40 "<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ec0
}
+n
1: *tokens = {
  type = TKN_IN,
  cmd_type = CMD_EXEC,
  name = 0x42ef40 "<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ec0
}
+n
1: *tokens = {
  type = TKN_IN,
  cmd_type = CMD_EXEC,
  name = 0x42ef40 "<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ec0
}
+p tokens->next
$1 = (struct s_tkn *) 0x447ec0
+p *tokens->next
$2 = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x447f10 "wc",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: *tokens = {
  type = TKN_IN,
  cmd_type = CMD_EXEC,
  name = 0x42ef40 "<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ec0
}
+n
1: *tokens = {
  type = TKN_IN,
  cmd_type = CMD_EXEC,
  name = 0x42ef40 "<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ec0
}
+ref
+ref
+n
1: *tokens = {
  type = TKN_IN,
  cmd_type = CMD_EXEC,
  name = 0x42ef40 "<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ec0
}
+n
1: *tokens = {
  type = TKN_IN,
  cmd_type = CMD_EXEC,
  name = 0x42ef40 "<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447ec0
}
+n
syntax_check (msh=0x7fffffffc788, tokens=0x447e70) at src/320_syntax.c:86
+n
+n
to_parse (msh=0x7fffffffc788) at src/300_parser.c:53
+n
+n
msh_loop (msh=0x7fffffffc788) at src/100_main.c:39
+n
+n
+n
+n
+n
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc788) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc788) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+n
+n
+n
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc788) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc788) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+n
+n
+s
tokenizer (msh=0x7fffffffc788, av=0x42ef00) at src/210_tkns_type.c:41
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+s
assign_tkn (token=0x447f60, av=0x42ef08) at src/210_tkns_type.c:82
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
tokenizer (msh=0x7fffffffc788, av=0x42ef00) at src/210_tkns_type.c:49
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
to_parse (msh=0x7fffffffc788) at src/300_parser.c:52
+n
+ref
+start
Temporary breakpoint 2 at 0x40130d: file src/100_main.c, line 23.
Starting program: /home/lude-bri/CC/Rank3/msh_v4/minishell 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+n
+n
+s
msh_loop (msh=0x7fffffffc788) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc788) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+n
+n
+n
+s
syntax_check (msh=0x7fffffffc788, tokens=0x447f50) at src/320_syntax.c:99
+n
+n
+s
syntax_check_redirs (msh=0x7fffffffc788, tokens=0x447f50) at src/320_syntax.c:35
+n
+n
+n
+n
+n
+n
+n
+n
+n
+disp *tokens
1: *tokens = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x448010 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448030
}
+n
1: *tokens = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x448010 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448030
}
+s
find_cmd (tokens=0x447fc0) at src/320_syntax.c:57
+disp *tokens
2: *tokens = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x448010 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448030
}
+n
2: *tokens = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x448010 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448030
}
+disp *current
3: *current = <error: Cannot access memory at address 0x0>
+n
2: *tokens = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x448010 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448030
}
3: *current = <error: Cannot access memory at address 0x0>
+n
2: *tokens = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x448010 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448030
}
3: *current = <error: Cannot access memory at address 0x0>
+n
2: *tokens = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x448010 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448030
}
3: *current = <error: Cannot access memory at address 0x0>
+n
2: *tokens = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x448010 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448030
}
3: *current = <error: Cannot access memory at address 0x0>
+n
2: *tokens = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x448010 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448030
}
3: *current = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x448010 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448030
}
+n
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x448080 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x4480a0
}
3: *current = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x448010 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448030
}
+n
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x448080 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x4480a0
}
3: *current = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x448010 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448030
}
+n
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x448080 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x4480a0
}
3: *current = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x448010 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448030
}
+n
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x448080 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x4480a0
}
3: *current = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x448010 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448030
}
+n
2: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x448080 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x4480a0
}
3: *current = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x448010 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448030
}
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc788) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc788) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+n
+n
+n
+s
syntax_check (msh=0x7fffffffc788, tokens=0x447ef0) at src/320_syntax.c:100
+n
+n
+s
syntax_check_redirs (msh=0x7fffffffc788, tokens=0x447ef0) at src/320_syntax.c:35
+n
+n
+n
+n
+n
+n
+n
+n
+n
+n
+s
find_cmd (tokens=0x447f60) at src/320_syntax.c:57
+disp *tokens
1: *tokens = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x447fb0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fd0
}
+n
1: *tokens = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x447fb0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fd0
}
+n
1: *tokens = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x447fb0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fd0
}
+n
1: *tokens = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x447fb0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fd0
}
+n
1: *tokens = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x447fb0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fd0
}
+n
1: *tokens = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x447fb0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fd0
}
+n
1: *tokens = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x447fb0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fd0
}
+n
1: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x448020 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448040
}
+p *current
$1 = {
  type = TKN_APPEND,
  cmd_type = CMD_EXEC,
  name = 0x447fb0 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fd0
}
+n
1: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x448020 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448040
}
+n
1: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x448020 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448040
}
+n
1: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x448020 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448040
}
+n
1: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x448020 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448040
}
+n
1: *tokens = {
  type = TKN_OUT,
  cmd_type = CMD_EXEC,
  name = 0x448020 ">",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x448040
}
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, 
   maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc788) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc788) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+n
+n
+n
+s
syntax_check (msh=0x7fffffffc788, tokens=0x447f70) at src/320_syntax.c:99
+n
+n
+s
syntax_check_redirs (msh=0x7fffffffc788, tokens=0x447f70) at src/320_syntax.c:35
+n
+n
+n
+n
+n
+n
+s
find_cmd (tokens=0x447f70) at src/320_syntax.c:57
+n
+disp *current
1: *current = <error: Cannot access memory at address 0x0>
+disp *tokens
2: *tokens = {
  type = TKN_HEREDOC,
  cmd_type = CMD_EXEC,
  name = 0x447fc0 "<<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fe0
}
+n
1: *current = <error: Cannot access memory at address 0x0>
2: *tokens = {
  type = TKN_HEREDOC,
  cmd_type = CMD_EXEC,
  name = 0x447fc0 "<<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fe0
}
+n
1: *current = <error: Cannot access memory at address 0x0>
2: *tokens = {
  type = TKN_HEREDOC,
  cmd_type = CMD_EXEC,
  name = 0x447fc0 "<<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fe0
}
+n
1: *current = <error: Cannot access memory at address 0x0>
2: *tokens = {
  type = TKN_HEREDOC,
  cmd_type = CMD_EXEC,
  name = 0x447fc0 "<<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fe0
}
+n
1: *current = <error: Cannot access memory at address 0x0>
2: *tokens = {
  type = TKN_HEREDOC,
  cmd_type = CMD_EXEC,
  name = 0x447fc0 "<<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fe0
}
+n
1: *current = {
  type = TKN_HEREDOC,
  cmd_type = CMD_EXEC,
  name = 0x447fc0 "<<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fe0
}
2: *tokens = {
  type = TKN_HEREDOC,
  cmd_type = CMD_EXEC,
  name = 0x447fc0 "<<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fe0
}
+n
1: *current = {
  type = TKN_HEREDOC,
  cmd_type = CMD_EXEC,
  name = 0x447fc0 "<<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fe0
}
2: *tokens = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448030 "here",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: *current = {
  type = TKN_HEREDOC,
  cmd_type = CMD_EXEC,
  name = 0x447fc0 "<<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fe0
}
2: *tokens = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448030 "here",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: *current = {
  type = TKN_HEREDOC,
  cmd_type = CMD_EXEC,
  name = 0x447fc0 "<<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fe0
}
2: *tokens = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448030 "here",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: *current = {
  type = TKN_HEREDOC,
  cmd_type = CMD_EXEC,
  name = 0x447fc0 "<<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fe0
}
2: *tokens = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448030 "here",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: *current = {
  type = TKN_HEREDOC,
  cmd_type = CMD_EXEC,
  name = 0x447fc0 "<<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fe0
}
2: *tokens = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448030 "here",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: *current = {
  type = TKN_HEREDOC,
  cmd_type = CMD_EXEC,
  name = 0x447fc0 "<<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fe0
}
2: *tokens = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448030 "here",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: *current = {
  type = TKN_HEREDOC,
  cmd_type = CMD_EXEC,
  name = 0x447fc0 "<<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fe0
}
2: *tokens = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448030 "here",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: *current = {
  type = TKN_HEREDOC,
  cmd_type = CMD_EXEC,
  name = 0x447fc0 "<<",
  cmdargs = 0x0,
  len = 2,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x447fe0
}
2: *tokens = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448030 "here",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: *current = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448030 "here",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
2: *tokens = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448030 "here",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: *current = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448030 "here",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
2: *tokens = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448030 "here",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: *current = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448030 "here",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
2: *tokens = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448030 "here",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
+n
1: *current = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448030 "here",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
2: *tokens = <error: Cannot access memory at address 0x0>
+n
1: *current = {
  type = TKN_CMD,
  cmd_type = CMD_EXEC,
  name = 0x448030 "here",
  cmdargs = 0x0,
  len = 0,
  tokens = 0x0,
  left = 0x0,
  right = 0x0,
  next = 0x0
}
2: *tokens = <error: Cannot access memory at address 0x0>
+q
warning: Error detected on fd 0
error detected on stdin
+set follow-fork-mode child
+show follow-fork-mode
Debugger response to a program call of fork or vfork is "child".
+set print pretty on
+set print array on
+skip -gfi *libreadline.so.8
File(s) *libreadline.so.8 will be skipped when stepping.
+define mchk
+define rfr
+define nr
+define xx
+break main
Breakpoint 1 at 0x40130d: file src/100_main.c, line 23.
+run
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".

Breakpoint 1, main (ac=1, av=0x7fffffffc938, envp=0x7fffffffc948) at src/100_main.c:23
+main
List of maintenance subcommands:

maintenance agent -- Translate an expression into remote agent bytecode for tracing.
maintenance agent-eval -- Translate an expression into remote agent bytecode for evaluation.
maintenance agent-printf -- Translate an expression into remote agent bytecode for evaluation and display the bytecodes.
maintenance btrace -- Branch tracing maintenance commands.
maintenance check -- Commands for checking internal gdb state.
maintenance check-psymtabs -- Check consistency of currently expanded psymtabs versus symtabs.
maintenance check-symtabs -- Check consistency of currently expanded symtabs.
maintenance cplus, maintenance cp -- C++ maintenance commands.
maintenance demangler-warning -- Give GDB a demangler warning.
maintenance deprecate -- Deprecate a command (for testing purposes).
maintenance dump-me -- Get fatal error; make debugger dump its core.
maintenance expand-symtabs -- Expand symbol tables.
maintenance flush -- Maintenance command for flushing GDB internal caches.
maintenance info, maintenance i -- Commands for showing internal info about the program being debugged.
maintenance internal-error -- Give GDB an internal error.
maintenance internal-warning -- Give GDB an internal warning.
maintenance packet -- Send an arbitrary packet to a remote target.
maintenance print -- Maintenance command for printing GDB internal state.
maintenance selftest -- Run gdb's unit tests.
maintenance set -- Set GDB internal variables used by the GDB maintainer.
maintenance show -- Show GDB internal variables used by the GDB maintainer.
maintenance space -- Set the display of space usage.
maintenance test-options -- Generic command for testing the options infrastructure.
maintenance time -- Set the display of time usage.
maintenance translate-address -- Translate a section name and address to a symbol.
maintenance undeprecate -- Undeprecate a command (for testing purposes).
maintenance with -- Like "with", but works with "maintenance set" variables.

Type "help maintenance" followed by maintenance subcommand name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.
+fs cmd
Focus set to cmd window.
+rfr
++refresh
+info break
Num     Type           Disp Enb Address            What
1       breakpoint     keep y   0x000000000040130d in main at src/100_main.c:23
	breakpoint already hit 1 time
+info watch
No watchpoints.
+n
+n
+s
msh_loop (msh=0x7fffffffc788) at src/100_main.c:33
+n
+n
+n
+s
to_parse (msh=0x7fffffffc788) at src/300_parser.c:36
+n
+ref
+n
+n
+n
+n
+n
+p *msh->cmd->av
There is no member named cmd.
+p *msh->cmds->av
$1 = 0x42ef20 "<<"
+n
+n
+n
+n
+ref
+ref
+n
+n
msh_loop (msh=0x7fffffffc788) at src/100_main.c:39
+n
+n
+n
+n
+n
+exit
